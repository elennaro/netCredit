group 'art.alex'
version '0.0.1-SNAPSHOT'

buildscript {
    ext {
        springBootVersion = '1.3.2.RELEASE'
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.moowork.gradle:gradle-node-plugin:0.11")
        classpath('com.moowork.gradle:gradle-gulp-plugin:0.11')
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

apply plugin: "com.moowork.node"
apply plugin: 'com.moowork.gulp'

//noinspection GroovyAssignabilityCheck
jar {
    baseName = 'netcredit_test'
    version = "${version}"
}

//noinspection GroovyUnusedAssignment
sourceCompatibility = 1.8
//noinspection GroovyUnusedAssignment
targetCompatibility = 1.8

repositories {
    jcenter()
}

// exclude commons-logging
//noinspection GroovyAssignabilityCheck
configurations.all {
    exclude group: "commons-logging", module: "commons-logging"
}

dependencies {
    compile('org.slf4j:jcl-over-slf4j');
    compile('ch.qos.logback:logback-classic');
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-validation')
    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('com.h2database:h2')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    //Webjars
    compile("org.webjars:bootstrap:3.3.6")
    compile("org.webjars:angular-ui-bootstrap:1.0.3")
    compile("org.webjars:jquery:2.2.0")
    compile("org.webjars:angularjs:1.4.9")
    //Dev
    compile('org.springframework.boot:spring-boot-devtools')

}


eclipse {
    //noinspection GroovyAssignabilityCheck
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

node {
    version = '4.3.0'
    npmVersion = '3.5.1'
    distBaseUrl = 'http://nodejs.org/dist'
    download = true
    workDir = file("${project.buildDir}/nodejs")
    nodeModulesDir = file("${project.projectDir}")
}

//make sure node and gulp are installed before calling the build task in gulpfile.js
init.dependsOn('installGulp')
init.dependsOn('npmInstall')
clean.dependsOn('installGulp')
clean.dependsOn('npmInstall')
clean.dependsOn('gulp_clean')

//make sure gulp generates CSS for the build
bootRun.dependsOn(gulp_build)
build.dependsOn(gulp_build)

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}
